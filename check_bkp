#!/bin/bash

# process args
while [ $# -gt 0 ]; do

   if [[ $1 == *"--"* ]]; then
        v="${1/--/}"
        if [[ $v == 'help' ]]; then
            declare $v=1
            shift
            continue
        fi
        declare $v="$2"
   fi
  shift
done

usage="$(basename "$0") [--dir] [--force_period] - plugin for check backups according to config plan using bkp list.

params:
    --dir           - configs location ( default: /etc/opt/bkp )
    --force_period  - d,w,m - daily,weekly or montly
                      tells that last backup must be not older then period + 1 day
example:
    check_bkp --dir /etc/opt/bkp/solusvm --force_period w"

test $help && echo "$usage" && exit

now=`date +%s`
sec_in_day=86400
exit_status=0
dir=${dir:-/etc/opt/bkp}

case $force_period in
  d)
    period=2
    ;;
  w)
    period=8
    ;;
  m)
    period=32
    ;;
  *)
    period=2
    ;;
esac

# check if bkp supports multiple profiles in configs
multiprofile=`bkp -? 2>&1 | grep list-profiles`

# find all configs in specified dir old than period
for config in `find $dir -maxdepth 1 -type f -mtime +$[period-1] -name "*.yml"`; do
    config_basename=`basename $config`
    has_daily=`grep -oP "\s+d:" $config`
    test $has_daily && limit=$[sec_in_day*period]
    if [ $force_period ]; then
        limit=$[sec_in_day*period]
    fi

    # solusvm part; need .my.cnf file with all stuff
    if [[ $dir =~ ^/etc/opt/bkp/solusvm/?$ ]]; then
        ctid=`grep -oP "\s+(ctid|vm):.*?\K\w+" $config`
        if [ -z $ctid ]; then
            exit_text+="can't determine ctid from $config\n"
            exit_status=1
        fi
        type=${config_basename:0:2}
        if [ "$type" = "CT" ]; then
            if [ ! -f "/etc/vz/conf/${ctid}.conf" ]; then
                continue
            fi
            if [ ! -z "$(sudo vzlist -S -H ${ctid})" ]; then
                continue
            fi
            suspended=`grep -soPi "disabled=.*yes" /etc/vz/conf/${ctid}.conf`
            test $suspended && continue
            last_unsuspend_seconds=`mysql -sN -e "select max(date) from systemmessages where content like '%/vz/private/$ctid%' and subject like '%[Unsuspend]%'"`
            if (( $[now - last_unsuspend_seconds] < $limit )); then
                continue
            fi

        elif [ "$type" = "VM" ]; then
            if [ ! -f "/etc/libvirt/qemu/${ctid}.xml" ]; then
                continue
            fi
            if ! virsh domstate $ctid &>/dev/null; then
                continue
            fi
        else
            exit_text+="can't determine virtualization type for $config\n"
            exit_status=1
        fi
    fi

    if [ -n "$multiprofile" ]; then
        for profile in `bkp list-profiles $config`; do
            last_archive_date=`bkp --profile=$profile list $config | tail -1 | grep -oP "\d{4}-\d{2}-\d{2}"`
            if [ ! $last_archive_date ]; then
                exit_text+="can't find last backup for $config_basename:$profile\n"
                exit_status=1
                continue
            fi
            last_archive_seconds=`date +%s -d $last_archive_date`
            if (( $[now - last_archive_seconds] > $limit )); then
                exit_text+="last backup is too old for $config_basename:$profile\n"
                exit_status=1
            fi
        done
    else
        last_archive_date=`bkp list $config | tail -1 | grep -oP "\d{4}-\d{2}-\d{2}"`
        if [ ! $last_archive_date ]; then
            exit_text+="can't find last backup for $config_basename\n"
            exit_status=1
            continue
        fi
        last_archive_seconds=`date +%s -d $last_archive_date`
        if (( $[now - last_archive_seconds] > $limit )); then
            exit_text+="last backup is too old for $config_basename\n"
            exit_status=1
        fi
    fi
done

dir=${dir:-/etc/opt/bkp}
exit_text=${exit_text:-"bkp OK"}
echo -e $exit_text
exit $exit_status
